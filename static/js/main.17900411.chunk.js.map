{"version":3,"sources":["components/Person.js","helpers.js","setup.js","components/Menu.js","components/Info.js","components/OptionsPanel.js","components/App.js","serviceWorker.js","index.js"],"names":["objectData","pages","sheetTitle","range","active_links","main","skill_set","work_samples","contact","cv_download","RESUME_URL","Menu","props","links","menuCentered","menuStyle","className","style","justifyContent","onClick","changeMenu","title","selected","length","href","target","rel","arrayToObject","arr","Object","assign","map","item","fetchURL","Person","useState","personData","setPersonData","useEffect","fetch","then","response","json","data","values","background","picture","fullName","jobTitle","linkedIn","gitHub","facebook","twitter","instagram","flickr","groupMainInfoArray","mainInfoObj","paragraph","experience","awards","education","interests","push","Info","infoData","setInfoData","renderView","padding","html","groupedData","i","key","award","skill","width","srcSet","sizes","alt","contactData","text","location","dangerouslySetInnerHTML","__html","email","phone","skype","renderInfoType","OptionsPanel","open","setOpen","themeColor","setThemeColor","setLinks","setMenuPosition","setMenuStyle","type","defaultChecked","App","setSelected","menuItem","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17900411.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n        FaLinkedin,\n        FaGithub,\n        FaFacebook,\n        FaTwitter,\n        FaInstagram,\n        FaFlickr\n} from 'react-icons/fa';\n\n// Helpers\nimport { GOOGLE_SHEET_ID, GOOGLE_API_KEY } from '../setup';\n\nconst arrayToObject = (arr) =>\nObject.assign({}, ...arr.map(item => ({[item[0]]: item[1]})));\n\nconst fetchURL = `https://sheets.googleapis.com/v4/spreadsheets/${GOOGLE_SHEET_ID}/values/basic!A:B?key=${GOOGLE_API_KEY}`;\nlet objectData;\n\nfunction Person() {\n\n    const [personData, setPersonData] = useState(objectData);\n\n    useEffect(() => {\n        if (!objectData)\n        fetch(fetchURL)\n            .then(response => response.json())\n            .then(data => {\n              objectData = arrayToObject(data.values, 'value', );\n              setPersonData(objectData);\n        });\n    });\n\n    return (\n        <div className=\"person\" style={{\n            background: `url(${(personData && personData.picture) ? personData.picture : ''}) center top/cover no-repeat`\n        }}>\n            <div className=\"basic-info\">\n                <h1>{(personData) ? personData.fullName : ''}</h1>\n                <h3>{(personData) ? personData.jobTitle : ''}</h3>\n                <ul className=\"social-links\">\n                {(personData && personData.linkedIn) ? <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={personData.linkedIn}><FaLinkedin /></a></li> : null}\n                {(personData && personData.gitHub) ? <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={personData.gitHub}><FaGithub /></a></li> : null}\n                {(personData && personData.facebook) ? <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={personData.facebook}><FaFacebook /></a></li> : null}\n                {(personData && personData.twitter) ? <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={personData.twitter}><FaTwitter /></a></li> : null}\n                {(personData && personData.instagram) ? <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={personData.instagram}><FaInstagram /></a></li> : null}\n                {(personData && personData.flickr) ? <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={personData.flickr}><FaFlickr /></a></li> : null}\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Person;\n","export const pages = {\n    main: { sheetTitle: 'main', range: 'A:D' },\n    skill_set: { sheetTitle: 'skill_set', range: 'A:B' },\n    work_samples: { sheetTitle: 'work_samples', range: 'A:D' },\n    contact: {sheetTitle: 'contact', range: 'A:B'}\n}\n\nexport const colors = {\n    blue: {\n        dark: '#3d5c7a',\n        medium: '#2196F3',\n        light: '#1170c4'\n    },\n    red: {\n        dark: '#611611',\n        medium: '#811811',\n        light: '#a11811'\n    }\n}","/* ESSENTIALS */ \n\n// The Sheet ID containing your site's data. The ID can be found on the URL of the sheet\nexport const GOOGLE_SHEET_ID = '1lRkTyBHXMhPVrQVT_EgeDTt62xk5tcPlwvrgA8WngtY';\n\n// Your API key, needed for requesting data from Google Sheets.\n// Can be retrieved from https://developers.google.com/sheets/api/quickstart/js */\nexport const GOOGLE_API_KEY = 'AIzaSyBhiqVypmyLHYPmqZYtvdSvxEopcLZBdYU';\n\n// Enables demo mode. An options panel will appear (set it to \"false\" before building)\nexport const demo_mode = true;\n\n\n/* OPTIONS */\n\n// Change the theme's main color - can be either 'blue', 'red' or 'green'\nexport const theme_color = 'blue'; \n\n// Set to \"true\" to enable or \"false\" to disable sections of the template\nexport const active_links = {\n    main: true,\n    skill_set: true,\n    work_samples: true,\n    contact: true,\n    cv_download: true\n}\n\n// Menu styling, options available are \"style1\" and \"style2\"\nexport const menu_style = 'style1';\n\n// Menu position, \"true\" places it in the center, while \"false\" places it from the start\nexport const centered_menu = false;\n\n// The URL your resume is uploaded\nexport const RESUME_URL = 'https://drive.google.com/open?id=1M7BI3pr5Necs8BaV0AAGQCniKyTptdpd';\n","import React from 'react';\n\nimport { FaUser , FaStar, FaBriefcase, FaPhone, FaCloudDownloadAlt} from \"react-icons/fa\";\n\nimport { pages } from '../helpers';\nimport { RESUME_URL } from '../setup';\n\n/**\n*   @author Aris Papadopoulos <aris.ppd@gmail.com> \n*   Site menu, selects page to be displayed in \"info\" component\n*/\nconst Menu = (props) => {\n\n    const { links, menuCentered, menuStyle } = props;\n\n    return (\n        <div className={`menu ${menuStyle}`}>\n            <ul style={(menuCentered) ? {justifyContent: 'center'} : null}>\n                {(links.main) ? \n                    <li onClick={() => props.changeMenu(pages.main)} title=\"Main Info\" className={(props.selected.sheetTitle === 'main') ? 'active' : ''}><FaUser /></li> : null\n                }\n                {(links.skill_set) ? \n                    <li onClick={() => props.changeMenu(pages.skill_set)} title=\"Skill Set\" className={(props.selected.sheetTitle === 'skill_set') ? 'active' : ''}><FaStar /></li> : null\n                }\n                {(links.work_samples) ? \n                    <li onClick={() => props.changeMenu(pages.work_samples)} title=\"Work Samples\" className={(props.selected.sheetTitle === 'work_samples') ? 'active' : ''}><FaBriefcase /></li> : null\n                }\n                {(links.contact) ? \n                    <li onClick={() => props.changeMenu(pages.contact)} title=\"Contact\" className={(props.selected.sheetTitle === 'contact') ? 'active' : ''}><FaPhone /></li> : null\n                }\n                {(links.cv_download && RESUME_URL && RESUME_URL.length) ? \n                    <li className=\"download-cv\" title=\"Download CV\"><a href=\"https://drive.google.com/open?id=1M7BI3pr5Necs8BaV0AAGQCniKyTptdpd\" target=\"_blank\" rel=\"noopener noreferrer\"><FaCloudDownloadAlt /></a></li> : null\n                }\n            </ul>\n        </div>\n    );\n}\n\n\nexport default Menu;\n","import React, { useState, useEffect } from 'react';\n\nimport { \n    FaUserGraduate, \n    FaBriefcase,\n    FaMedal,\n    FaHeart, \n    FaEnvelope, \n    FaPhone,\n    FaSkype\n} from \"react-icons/fa\";\n\n// Other 3rd party\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n// Helpers\nimport { GOOGLE_SHEET_ID, GOOGLE_API_KEY } from '../setup';\n\n/*  Holds data as they come from the Google Sheets API requests, \n    so that we no longer need to refetch after first request */\nlet objectData = {\n    main: null,\n    work_samples: null,\n    skill_set: null,\n    contact: null\n}\n\n// Converts a 2-column array into an object of key:value pairs\nconst arrayToObject = (arr) =>\nObject.assign({}, ...arr.map(item => ({[item[0]]: item[1]})));\n\n\n/*  Google Sheet API returns all results in array. This function is used to group the 'main' info into \n    paragraphs, experience, education & interests, in order to later render them in the correct section */\nconst groupMainInfoArray = (arr) => {\n    // Object used to group API data\n    let mainInfoObj = {\n        paragraph: [],\n        experience: [],\n        awards: [],\n        education: [],\n        interests: []\n    };\n    arr.map(item => {\n        if (item[0] === 'paragraph') {\n            mainInfoObj.paragraph.push([item[1], item[2]]);\n        } \n        else if (item[0] === 'experience') {\n            mainInfoObj.experience.push([item[1], item[2], item[3]]);\n        }\n        else if (item[0] === 'award') {\n            mainInfoObj.awards.push([item[1], item[2], item[3]]);\n        }\n        else if (item[0] === 'education') {\n            mainInfoObj.education.push([item[1], item[2], item[3]]);\n        }\n        else if (item[0] === 'interest') {\n            mainInfoObj.interests.push([item[1], item[2]]);\n        }\n        return mainInfoObj;\n    });\n    return mainInfoObj;\n}\n\n\nconst Info = (props) => {\n\n    const { sheetTitle, range } = props.selected;\n    const fetchURL = `https://sheets.googleapis.com/v4/spreadsheets/${GOOGLE_SHEET_ID}/values/${sheetTitle}!${range}?key=${GOOGLE_API_KEY}`;\n\n    const [infoData, setInfoData] = useState(objectData);\n\n    useEffect(() => {\n        if (!infoData[sheetTitle])\n        fetch(fetchURL)\n            .then(response => response.json())\n            .then(data => {\n                setInfoData({ ...infoData, [sheetTitle]: data });\n        });\n    });\n\n    function renderView({ style, ...props }) {\n        const viewStyle = {\n            padding: '0 15px'\n        };\n        return (\n            <div\n                className=\"box\"\n                style={{ ...style, ...viewStyle }}\n                {...props}/>\n        );\n    }\n\n    function createMarkup(html) {\n        return {__html: html};\n    }\n\n    function renderInfoType() {\n\n        const { sheetTitle } = props.selected;\n\n        switch(sheetTitle) {\n\n            case 'main':\n                let groupedData;\n                if (infoData[sheetTitle] && infoData[sheetTitle].values) {\n                    groupedData = groupMainInfoArray(infoData[sheetTitle].values);\n                }\n                return (infoData[sheetTitle]) ? \n                    <main>\n                        <h2>About me</h2>\n                        {(groupedData.paragraph.length) ?\n                        <section className=\"main-info paragraph\">\n                            {groupedData.paragraph.map((paragraph, i) => {\n                                return (\n                                    <article key={i}>\n                                        <h3>{paragraph[0]}</h3>\n                                        <p>{paragraph[1]}</p>\n                                    </article>\n                                )\n                            })}\n                        </section>\n                        : null}\n                        {(groupedData.experience.length) ?\n                        <section className=\"main-info experience\">\n                            <div className=\"main-info-title\">\n                                <FaBriefcase />\n                                <h2>Experience</h2>\n                            </div>\n                            {groupedData.experience.map((experience, i) => {\n                                return (\n                                    <article key={i}>\n                                        <span className=\"period\">{experience[2]}</span>\n                                        <h3>{experience[0]}</h3>\n                                        <p>{experience[1]}</p>\n                                    </article>\n                                )\n                            })}\n                        </section>\n                        : null}\n                        {(groupedData.awards.length) ?\n                        <section className=\"main-info award\">\n                            <div className=\"main-info-title\">\n                                <FaMedal />\n                                <h2>Awards</h2>\n                            </div>\n                            {groupedData.awards.map((award, i) => {\n                                return (\n                                    <article key={i}>\n                                        <span className=\"period\">{award[2]}</span>\n                                        <h3>{award[0]}</h3>\n                                        <p>{award[1]}</p>\n                                    </article>\n                                )\n                            })}\n                        </section>\n                        : null}\n                        {(groupedData.education.length) ?\n                        <section className=\"main-info education\">\n                            <div className=\"main-info-title\">\n                                <FaUserGraduate />\n                                <h2>Education</h2>\n                            </div>\n                            {groupedData.education.map((education, i) => {\n                                return (\n                                    <article key={i}>\n                                        <span className=\"period\">{education[2]}</span>\n                                        <h3>{education[0]}</h3>\n                                        <p>{education[1]}</p>\n                                    </article>\n                                )\n                            })}\n                        </section>\n                        : null}\n                        {(groupedData.interests.length) ?\n                        <section className=\"main-info interests\">\n                            <div className=\"main-info-title\">\n                                <FaHeart />\n                                <h2>Interests</h2>\n                            </div>\n                            {groupedData.interests.map((interests, i) => {\n                                return (\n                                    <article key={i}>\n                                        <h3>{interests[0]}</h3>\n                                        <p>{interests[1]}</p>\n                                    </article>\n                                )\n                            })}\n                        </section>\n                        : null}\n                    </main>\n                : null\n            case 'skill_set':\n                return ( \n                    <main>\n                        <h2>Technical Skill Set</h2>\n                        <div className=\"skill-set\">\n                            {(infoData[sheetTitle] && infoData[sheetTitle].values) ? infoData[sheetTitle].values.map(skill => {\n                                return (\n                                    <div className=\"skill\" key={skill[0]}>\n                                        <p className=\"skill-info\">\n                                            <span className=\"skill-name\">{skill[0]}</span>\n                                            <span className=\"skill-level\">{`${skill[1]}%`}</span>\n                                        </p>\n                                        <div className=\"progress-container\">\n                                            <div className=\"progress-bar\" style={{width: `${skill[1]}%`}}></div>\n                                        </div>\n                                    </div>\n                                )\n                            }) : null}\n                        </div>\n                    </main>\n                )\n            case 'work_samples':\n                return (\n                    <main>\n                        <h2>Recent Projects</h2>\n                        <div className=\"work-samples\">\n                            {(infoData[sheetTitle] && infoData[sheetTitle].values) ? infoData[sheetTitle].values.map((item, i) => {\n                                return (\n                                    <article key={item[0]}>\n                                        <img srcSet={item[3]} sizes=\"100vw\" alt={item[0]} />\n                                        {(item[1]) \n                                            ? <a href={item[1]} target=\"_blank\" rel=\"noopener noreferrer\">{item[0]}</a> \n                                            : <span>{item[0]}</span>}\n                                        <p>{item[2]}</p>\n                                    </article>\n                                )\n                            }) \n                            : null}\n                        </div>\n                    </main>\n                )\n            case 'contact':\n                const contactData = (infoData[sheetTitle]) ? arrayToObject(infoData[sheetTitle].values) : null;\n                return (contactData) ? (\n                    <main>\n                        <h2>Contact</h2>\n                        {(contactData.text) ? <p>{contactData.text}</p> : null}\n                        {(contactData.location) ? <div dangerouslySetInnerHTML={createMarkup(contactData.location)} /> : null}\n                        {(contactData.email) ? <p className=\"contact-data\"><FaEnvelope />{contactData.email}</p> : null}\n                        {(contactData.phone) ? <p className=\"contact-data\"><FaPhone />{contactData.phone}</p> : null}\n                        {(contactData.skype) ? <p className=\"contact-data\"><FaSkype />{contactData.skype}</p> : null}\n                    </main>\n                )\n                : null\n\n            default:\n                return null\n        }\n    }\n\n    return (\n        <div className=\"info\">\n            <Scrollbars renderView={renderView}>\n                {renderInfoType()}\n            </Scrollbars>\n        </div>\n    );\n}\n\nexport default Info;\n","import React, { useState } from 'react';\n\nimport { FaAngleUp } from 'react-icons/fa';\n\n\nfunction OptionsPanel(props) {\n\n    const [open, setOpen] = useState(true);\n\n    const { themeColor, setThemeColor, links, setLinks, menuCentered, setMenuPosition, menuStyle, setMenuStyle } = props;\n\n    return (\n        <div className={`options-panel ${(open) ? 'active' : ''}`}>\n            <div className=\"toggle-menu\" onClick={() => setOpen(!open)}>\n                <h3>Theme Options</h3>\n                <FaAngleUp />\n            </div>\n            <div className=\"options\">\n                <div className=\"color-select\">\n                    <p>Select Theme Color</p>\n                    <div>\n                        <span onClick={() => setThemeColor('blue')} className={`${(themeColor === 'blue' ? 'active' : '')} color blue`}></span>\n                        <span onClick={() => setThemeColor('red')} className={`${(themeColor === 'red' ? 'active' : '')} color red`}></span>\n                        <span onClick={() => setThemeColor('green')} className={`${(themeColor === 'green' ? 'active' : '')} color green`}></span>\n                        <span onClick={() => setThemeColor('pink')} className={`${(themeColor === 'pink' ? 'active' : '')} color pink`}></span>\n                    </div>\n                </div>\n                <div className=\"menu-style\">\n                    <p>Menu Style</p>\n                    <div>\n                        <span onClick={() => setMenuStyle('style1')} className={`menu-position-option ${(menuStyle === 'style1') ? 'active' : ''}`}>Style 1</span>\n                        <span onClick={() => setMenuStyle('style2')} className={`menu-position-option ${(menuStyle === 'style2') ? 'active' : ''}`}>Style 2</span>\n                    </div>\n                </div>\n                <div className=\"menu-position\">\n                    <p>Menu Position</p>\n                    <div>\n                        <span onClick={() => setMenuPosition(true)} className={`menu-position-option ${(menuCentered) ? 'active' : ''}`}>Center</span>\n                        <span onClick={() => setMenuPosition(false)} className={`menu-position-option ${(menuCentered) ? '' : 'active'}`}>Start</span>\n                    </div>\n                </div>\n                <div className=\"section-switches\">\n                    <p>Active Links</p>\n                    <div>\n                        <span className=\"page\">Main</span>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" onClick={() => setLinks({...links, main: !links.main })} defaultChecked={links.main} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div>\n                        <span className=\"page\">Skill set</span>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" onClick={() => setLinks({...links, skill_set: !links.skill_set })} defaultChecked={links.skill_set} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div>\n                        <span className=\"page\">Work samples</span>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" onClick={() => setLinks({...links, work_samples: !links.work_samples })} defaultChecked={links.work_samples} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div>\n                        <span className=\"page\">Contact</span>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" onClick={() => setLinks({...links, contact: !links.contact })} defaultChecked={links.contact} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div>\n                        <span className=\"page\">CV download</span>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\" onClick={() => setLinks({...links, cv_download: !links.cv_download })} defaultChecked={links.cv_download} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OptionsPanel;\n","import React, { useState } from 'react';\nimport '../styles/App.css';\n\nimport Menu from './Menu';\nimport Person from './Person';\nimport Info from './Info';\nimport OptionsPanel from './OptionsPanel';\n\nimport { theme_color, active_links, centered_menu, menu_style, demo_mode } from '../setup';\nimport { pages } from '../helpers';\n\n\n\nconst App = () => {\n\n    const [selected, setSelected] = useState(pages.main);\n\n    // For Demo Mode\n    const [themeColor, setThemeColor] = useState(theme_color);\n    const [links, setLinks] = useState(active_links);\n    const [menuCentered, setMenuPosition] = useState(centered_menu);\n    const [menuStyle, setMenuStyle] = useState(menu_style);\n\n\n    function changeMenu(menuItem) {\n        setSelected(menuItem);\n    }\n\n    return (\n        <div className={`App ${themeColor}`}>\n            <Menu selected={selected} changeMenu={changeMenu} links={links} menuCentered={menuCentered} menuStyle={menuStyle} />\n            <Person />\n            <Info selected={selected} />\n            {(demo_mode) ? \n                <OptionsPanel \n                    themeColor={themeColor}\n                    setThemeColor={setThemeColor}\n                    links={links} \n                    setLinks={setLinks}\n                    menuCentered={menuCentered}\n                    setMenuPosition={setMenuPosition}\n                    menuStyle={menuStyle} \n                    setMenuStyle={setMenuStyle}\n                />\n                : null\n            }\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}